name: Build bun-compatible Playwright Docker image

on:
  workflow_dispatch: 
    inputs:
      test: 
        type: boolean
        description: Run tests as if this were a pull request
        default: true
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Get docker image tag
        id: original_image
        run: |
          function tagurl() {
            echo "ghcr.io/${{ github.repository }}:$1"
          }

          if [ "$EVENT" == "pull_request" ]; then
            echo "This is a PR, setting tag to 'pr-${SHAW}'"
            tag="pr-${SHAW}"
            echo "tags=`tagurl $tag`" >> $GITHUB_OUTPUT
          else
            tag=$(grep ^FROM Dockerfile | cut -d ':' -f 2)
            echo "tags=`tagurl $tag`,`tagurl latest`" >> $GITHUB_OUTPUT
          fi
        env:
          EVENT: ${{ github.event_name }}
          # Shaw! Guarana!! GIT GUD!
          SHAW: ${{ github.sha }}
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          push: true
          tags: ${{ steps.original_image.outputs.tags }}

  test:
    if: github.event_name == 'pull_request' || github.event.inputs.test
    runs-on: ubuntu-latest
    needs: build
    container:
      image: ghcr.io/gwennlbh/playwright-bun:pr-${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Install bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Check bun version
        run: bun --version
      - name: Get declared playwright version
        id: playwright
        run: |
          echo "version=$(grep ^FROM Dockerfile | cut -d: -f 2 | cut -d'-' -f1 | sed s/v//)" >> $GITHUB_OUTPUT
      - name: Try running playwright
        run: bunx playwright@${{ steps.playwright.outputs.version }} --version

  cleanup:
    if: always() && (github.event_name == 'pull_request' || github.event.inputs.test)
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Delete Docker image
        uses: dataaxiom/ghcr-cleanup-action@v1
        with:
          delete-tags: pr-${{ github.sha }}
          
